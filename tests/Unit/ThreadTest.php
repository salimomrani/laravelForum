<?php

namespace Tests\Unit;

use App\Channel;
use App\Reply;
use App\Thread;
use App\User;
use Illuminate\Support\Collection;
use Tests\TestCase;
use Illuminate\Foundation\Testing\DatabaseMigrations;
use Illuminate\Foundation\Testing\DatabaseTransactions;

class ThreadTest extends TestCase {

  use DatabaseMigrations;

  protected $thread;

  protected function setUp() {
	parent::setUp(); // TODO: Change the autogenerated stub
	$this->thread = create(Thread::class);

  }

  /**
   * @test
   */
  function a_threat_can_make_a_string_path() {
	$this->assertEquals("/threads/{$this->thread->channel->slug}/{$this->thread->id}",$this->thread->path());
    }

  /**
   * @test
   */
  function a_thread_has_replies() {
	$this->assertInstanceOf(Collection::class, $this->thread->replies);
  }


  /**
   * @test
   */
  function a_thread_has_a_creator() {

	$this->assertInstanceOf(User::class, $this->thread->creator);
  }

  /**
   * @test
   */
  function a_thread_can_add_a_reply() {
	$this->thread->addReply([
		'body'=>'FooBar',
	  	'user_id'=>	1
	]);

	$this->assertCount(1,$this->thread->replies);
  }

  

  /**
   * @test
   */
  function a_thread_belong_to_a_channel() {
    $thread = $this->thread;
	$this->assertInstanceOf(Channel::class,$thread->channel);
    }
}
